:-import member/2 from basics.
allCourses([[c1,2],[c2,3],[c3,1],[c4,2],[c5,2],[c6,3],[c7,2],[c8,3],[c9,2]]).
requiredCredits(30).
group(g1,3,[c1,c2,c3]).
group(g2,1,[c5,c6]).
group(g3,2,[c7,c8,c9]).
groupList([g1,g2,g3]).
equivalent([c7,c9]).
transcript([[c1,a],[c2,b_plus],[c3,a_minus],[c4,f],[c4,c],[c5,w]]).


passingGrade([a_plus,a,a_minus,b_plus,b,b_minus,c_plus,c,c_minus,d_plus,d,d_minus]).

verifyCourses(0,[],_).
verifyCourses(NumCourses,[F|R],CourseList):- member([F,G],CourseList),
passingGrade(L),member(G,L),NewNumCourses is NumCourses - 1,
verifyCourses(NewNumCourses,R,CourseList). 
